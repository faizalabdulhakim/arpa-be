generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  name          String
  email         String         @unique
  password      String
  role          Role
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  deletedAt     DateTime?
  orders        Order[]
  shoppingCarts ShoppingCart[]
}

model Product {
  id            String                 @id @default(uuid())
  name          String
  image         String 
  description   String
  price         Int
  stock         Int
  createdAt     DateTime               @default(now())
  updatedAt     DateTime               @updatedAt
  deletedAt     DateTime?
  categories    ProductsOnCategories[]
  orders        ProductsOnOrders[]
  shoppingCarts ShoppingCart[]
}

model Category {
  id        String                 @id @default(uuid())
  name      String
  createdAt DateTime               @default(now())
  updatedAt DateTime               @updatedAt
  deletedAt DateTime?
  products  ProductsOnCategories[]
}

model ProductsOnCategories {
  product_id  String
  category_id String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  category    Category @relation(fields: [category_id], references: [id], onDelete: Cascade)
  product     Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)

  @@id([product_id, category_id])
}

model Order {
  id          String             @id @default(uuid())
  user_id     String
  total_price Int
  status      Status             @default(PROCESSING)
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  deletedAt   DateTime?
  user        User               @relation(fields: [user_id], references: [id], onDelete: Cascade)
  products    ProductsOnOrders[]
}

model ProductsOnOrders {
  order_id   String
  product_id String
  quantity   Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime?
  order      Order     @relation(fields: [order_id], references: [id], onDelete: Cascade)
  product    Product   @relation(fields: [product_id], references: [id], onDelete: Cascade)

  @@id([order_id, product_id])
}

model ShoppingCart {
  user_id    String
  product_id String
  quantity   Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  product    Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@id([user_id, product_id])
}

enum Role {
  ADMIN
  USER
}

enum Status {
  PROCESSING
  SHIPPED
  DELIVERED
}
